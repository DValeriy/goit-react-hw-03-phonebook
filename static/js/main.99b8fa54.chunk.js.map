{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Form/Form.module.css","components/Form/Form.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","e","target","value","setState","cbOnSubmit","preventDefault","handleSubmitForm","props","onSubmit","this","className","s","form","label","onChange","type","pattern","title","required","button","Component","ContactListItem","removeItem","item","onClick","ContactList","contacts","markup","map","id","list","Filter","handleFilter","input","App","filter","some","toLocaleLowerCase","alert","prev","shortid","generate","filteredContacts","toLowerCase","includes","loadContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99b8fa54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3nx5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1pVIM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1Z6fE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1kYm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1QDAO\",\"label\":\"Form_label__3Sqih\",\"button\":\"Form_button__2mFew\"};","import s from \"./Form.module.css\";\r\n\r\nimport { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  cbOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { handleSubmitForm } = this.props;\r\n    handleSubmitForm(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.cbOnSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  handleSubmitForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import s from \"./ContactListItem.module.css\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactListItem = ({ name, number, removeItem }) => {\r\n  const cbOnRemove = () => {\r\n    removeItem(name);\r\n  };\r\n  return (\r\n    <li className={s.item}>\r\n      <span>{name}</span>\r\n      <span>{number}</span>\r\n      <button type=\"button\" onClick={cbOnRemove}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import s from \"./ContactList.module.css\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, removeItem }) => {\r\n  const markup = contacts.map(({ id, ...props }) => {\r\n    return <ContactListItem key={id} {...props} removeItem={removeItem} />;\r\n  });\r\n  return <ul className={s.list}>{markup}</ul>;\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ handleFilter, value }) => {\r\n  return (\r\n    <div className={s.input}>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filterWord\"\r\n        value={value}\r\n        onChange={handleFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import s from \"./App.module.css\";\r\n\r\nimport { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nimport Form from \"../Form\";\r\nimport ContactList from \"../ContactList\";\r\nimport Filter from \"../Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const loadContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    this.setState({\r\n      contacts: loadContacts || [\r\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n      ],\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (prevState.contacts !== contacts)\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }\r\n\r\n  handleSubmitForm = ({ name, number }) => {\r\n    const { contacts } = this.state;\r\n\r\n    contacts.some(\r\n      ({ name: contactName }) =>\r\n        contactName.toLocaleLowerCase() === name.toLocaleLowerCase()\r\n    )\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState((prev) => ({\r\n          contacts: [\r\n            ...prev.contacts,\r\n            { name, number, id: shortid.generate() },\r\n          ],\r\n        }));\r\n  };\r\n  handleFilter = ({ target }) => {\r\n    const { value } = target;\r\n    this.setState({\r\n      filter: value,\r\n    });\r\n  };\r\n  removeItem = (id) => {\r\n    // const delItem = target.closest(\"LI\").firstChild.textContent;\r\n    this.setState((prev) => ({\r\n      contacts: prev.contacts.filter(({ name }) => name !== id),\r\n      // contacts: [...prev.contacts.filter(({ name }) => name !== delItem)],\r\n    }));\r\n  };\r\n  filteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return filter\r\n      ? contacts.filter(({ name }) => {\r\n          return name.toLowerCase().includes(filter.toLowerCase());\r\n        })\r\n      : contacts;\r\n  };\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <Form handleSubmitForm={this.handleSubmitForm} />\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <Filter handleFilter={this.handleFilter} value={filter} />\r\n        <ContactList\r\n          contacts={this.filteredContacts()}\r\n          removeItem={this.removeItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}